#summary Getting started with the threedhst package

= Set up your Python environment = 

The easiest way to get everything right is by downloading and installing STScI  Python from [http://www.stsci.edu/resources/software_hardware/pyraf/stsci_python/current/download here].

Download the full installation `stsci_iraf_intel_2.10.dmg` (as of June 2010) and install from the package.

The STScI Python packages seems to require `csh`, which is a bit of a pain since the Mac defaults to `bash`.  After the installation, test that things are installed with 

{{{
$ csh
% pyraf --ipython 
}}}

The `--ipython` flag isn't required, but provides a nice interface to python with lots of tab completion options to make things easy to figure out.

Download aXe2html from [http://www.stecf.org/software/slitless_software/axe/installation.php].  aXe2html doesn't seem to work with the exact Python configuration as installed by STScI Python, but can be fixed as follows:

{{{
cd $THREED_ROOT   # See below
tar xzvf ~/Downloads/aXe2html-1.1.tar.gz
cd aXe2html-1.1

perl -pi -e "s/import Image/from PIL import Image/" setup.py
perl -pi -e "s/import Image, ImageDraw/from PIL import Image, ImageDraw/" ./aXe2html/irafims/irafimtools.py
perl -pi -e "s/import Image, os, string, math/from PIL import Image\nimport string, os,math/" ./aXe2html/spectra/outdata.py
perl -pi -e "s/import Image/from PIL import Image/" ./aXe2html/spectra/plot_spc.py
perl -pi -e "s/import Image, os, string, math/from PIL import Image\nimport string, os,math/" ./aXe2html/spectra/plotspectra.py

cd ..   # make sure you install with the STScI Python
ln -s ${PWD}/aXe2html-1.1/aXe2html .
}}}

This last step makes aXe2html available to Python, but doesn't compile and install its command-line programs.

= Download and install =

Pick some root directory where you want to place the code, say $HOME.

{{{  
export THREED_ROOT=$HOME 
}}}

This directory needs to be in your PYTHONPATH to be able to find it from within PyRAF. 

{{{
export PYTHONPATH="${PYTHONPATH}:$THREED_ROOT"
}}}

Included in the distribution are some wrappers around some of the functions that you can call from the command line.  They will live in `$THREED_ROOT/threedhst/bin`, so add that directory to your path.

{{{
export PATH="${PATH}:$THREED_ROOT/threedhst/bin"
}}}

(You'll probably want to put all of the ``export`` lines in your `~/.bashrc` file so they're loaded each time you start a new terminal.)

Now checkout the code with Subversion (svn):

{{{
cd $THREED_ROOT
svn checkout https://threedhst.googlecode.com/svn/ . --username YOUR_GOOGLE_USERNAME
}}}

It will ask for a password the first time you try to checkout the code.  This can be found at your code.google [https://code.google.com/hosting/settings settings page].  Note that this password is different from your normal google account password for security reasons (SVN caches the password in an unsecure place so you don't have to enter the password every time you checkout or commit the code).

If you want to contribute to the development of the code, send an email to G. Brammer requesting "commit" privileges.

= Example = 

Download the 4 threedhst-*tar.gz files from the [Downloads] tab.

{{{
#### Make example directory
cd $THREED_ROOT
mkdir ERS
cd ERS
mv ~/Downloads/threedhst-*.tar.gz . ## assuming they're in ~/Downloads
#### Make directory structure
tar xvfz threedhst-directories.tar.gz
tar xvfz threedhst-IREF.tar.gz
tar xvfz threedhst-CONF.tar.gz
#### Extract the example GOODS-ERS files to ./RAW
tar xvfz threedhst-ERS-G141.tar.gz

export iref="${PWD}/IREF/"  # This could go in `~/.bashrc`
csh
pyraf --ipython
}}}

Now, within PYRAF:

{{{
import threedhst
direct = 'ib6o23020_asn.fits'
grism = 'ib6o23010_asn.fits'
threedhst.process_grism.reduction_script(asn_grism_file=grism, asn_direct_file=direct)
}}}
 